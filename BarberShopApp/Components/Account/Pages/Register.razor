@page "/Account/Register"

@using System.ComponentModel.DataAnnotations
@using System.Text
@using System.Text.Encodings.Web
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities
@using BarberShopApp.Core.Models
@using BarberShopApp.Data Models

@inject UserManager<ApplicationUser> UserManager
@inject IUserStore<ApplicationUser> UserStore
@inject SignInManager<ApplicationUser> SignInManager
@inject IEmailSender<ApplicationUser> EmailSender
@inject ILogger<Register> Logger
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager
@inject ApplicationDbContext DbContext

@rendermode InteractiveServer
<PageTitle>Register</PageTitle>

<h1>Registrar</h1>

<div class="registe-container">
    <div class="Register-card">
        @if (!string.IsNullOrEmpty(Message))
        {
            // Exemplo de como você pode renderizar a mensagem de status
            <div class="alert alert-info alert-dismissible fade show mt-3" role="alert">
                @Message
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        <EditForm Model="Input" OnValidSubmit="RegisterUser" FormName="register">
            <DataAnnotationsValidator />
            <h2>Criar uma nova conta</h2>
            <hr />
            <ValidationSummary class="text-danger" role="alert" />

            <div class="mb-3">
                <label for="registrationType" class="form-label">Tipo de Registro</label>
                <InputSelect @bind-Value="Input.RegistrationType" class="form-select" id="registrationType"
                @onchange="OnRegistrationTypeChange">
                    <option value="@UserRegistrationType.Client">Cliente</option>
                    <option value="@UserRegistrationType.Admin">Administrador</option>
                    <option value="@UserRegistrationType.Professional">Profissional</option>
                </InputSelect>
            </div>

            @* Campos de Email e Senha aparecem para todos os tipos *@
            @if (Input.RegistrationType == UserRegistrationType.Client ||
              Input.RegistrationType == UserRegistrationType.Admin ||
              Input.RegistrationType == UserRegistrationType.Professional)
            {
                <div class="form-floating mb-3">
                    <InputText @bind-Value="Input.Email" class="form-control" autocomplete="username" aria-required="true" placeholder="name@example.com" />
                    <label for="email">Email</label>
                    <ValidationMessage For="() => Input.Email" class="text-danger" />
                </div>
                <div class="form-floating mb-3">
                    <InputText type="password" @bind-Value="Input.Password" class="form-control" autocomplete="new-password" aria-required="true" placeholder="password" />
                    <label for="password">Senha</label>
                    <ValidationMessage For="() => Input.Password" class="text-danger" />
                </div>
                <div class="form-floating mb-3">
                    <InputText type="password" @bind-Value="Input.ConfirmPassword" class="form-control" autocomplete="new-password" aria-required="true" placeholder="password" />
                    <label for="confirm-password">Confirmar Senha</label>
                    <ValidationMessage For="() => Input.ConfirmPassword" class="text-danger" />
                </div>
            }

            @* Campos específicos para Profissional *@
            @if (Input.RegistrationType == UserRegistrationType.Professional)
            {
                <hr />
                <h4>Dados do Profissional</h4>
                <div class="form-floating mb-3">
                    <InputText @bind-Value="Input.NomeProfissional" class="form-control" placeholder="Nome Completo" />
                    <label for="nomeProfissional">Nome</label>
                    <ValidationMessage For="() => Input.NomeProfissional" class="text-danger" />
                </div>
                <div class="form-floating mb-3">
                    <input type="text" id="telefoneProfissional" class="form-control" 
                           @bind="Input.TelefoneProfissional" 
                           placeholder="(11) 99999-9999" maxlength="15" />
                    <label for="telefoneProfissional">Telefone</label>
                    <ValidationMessage For="() => Input.TelefoneProfissional" class="text-danger" />
                </div>
                <div class="form-floating mb-3">
                    <InputSelect @bind-Value="Input.TipoDocumentoProfissional" class="form-select">
                        <option value="">Selecione o Tipo de Documento</option>
                        @foreach (var type in Enum.GetValues<DocumentType>())
                        {
                            <option value="@type">@type.ToString()</option>
                        }
                    </InputSelect>
                    <label for="tipoDocumentoProfissional">Tipo de Documento</label>
                    <ValidationMessage For="() => Input.TipoDocumentoProfissional" class="text-danger" />
                </div>
                <div class="form-floating mb-3">
                    <InputText @bind-Value="Input.DocumentoProfissional" class="form-control" placeholder="Número do Documento" />
                    <label for="documentoProfissional">Documento</label>
                    <ValidationMessage For="() => Input.DocumentoProfissional" class="text-danger" />
                </div>
                <div class="form-floating mb-3">
                    <InputDate @bind-Value="Input.DataNascimentoProfissional" class="form-control"  />
                    <label for="dataNascimentoProfissional">Data de Nascimento</label>
                    <ValidationMessage For="() => Input.DataNascimentoProfissional" class="text-danger" />
                </div>
                <div class="form-check mb-3">
                    <InputCheckbox @bind-Value="Input.FumanteProfissional" class="form-check-input" id="fumanteProfissional" />
                    <label class="form-check-label" for="fumanteProfissional">Fumante</label>
                </div>
                <div class="form-floating mb-3">
                    <InputText @bind-Value="Input.ImgUrlProfissional" class="form-control" placeholder="URL da Imagem" />
                    <label for="imgUrlProfissional">URL da Imagem</label>
                    <ValidationMessage For="() => Input.ImgUrlProfissional" class="text-danger" />
                </div>
                <div class="form-floating mb-3">
                    <InputNumber @bind-Value="Input.PercentualDeComissaoProfissional" class="form-control" placeholder="Percentual de Comissão" />
                    <label for="percentualDeComissaoProfissional">Percentual de Comissão</label>
                    <ValidationMessage For="() => Input.PercentualDeComissaoProfissional" class="text-danger" />
                </div>
            }

            <button type="submit" class="w-100 btn btn-lg btn-primary">Registrar</button>
        </EditForm>
    </div>
</div>
