@page "/cliente/logout"
@using Microsoft.AspNetCore.Identity
@using BarberShopApp.Data
@using BarberShopApp.Components.Account
@inject SignInManager<ApplicationUser> SignInManager
@inject IdentityRedirectManager RedirectManager

@layout Layout.EmptyLayout
<PageTitle>Logout - Cliente</PageTitle>

<div class="logout-container">
    <div class="logout-card">
        <div class="text-center mb-4">
            <i class="fas fa-question-circle fa-3x text-warning mb-3"></i>
            <h2 class="text-light">Sair da Conta</h2>
            <p class="text-muted">Tem certeza que deseja sair?</p>
            <p class="text-muted">Você será desconectado da sua conta</p>
        </div>

        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <div class="alert alert-danger" role="alert">
                <i class="fas fa-exclamation-triangle me-2"></i>
                @errorMessage
            </div>
        }

        <div class="d-grid gap-2">
            <form method="post" @onsubmit="ConfirmLogout" @formname="LogoutForm">
                <AntiforgeryToken />
                <button type="submit" class="btn btn-warning btn-lg w-100">
                    <i class="fas fa-sign-out-alt me-2"></i>Sim, sair
                </button>
            </form>
            
            <a href="/" class="btn btn-outline-light btn-lg">
                <i class="fas fa-times me-2"></i>Cancelar
            </a>
        </div>
    </div>
</div>

<style>
    .logout-container {
        min-height: 100vh;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 20px;
    }
    
    .logout-card {
        background-color: rgba(255, 255, 255, 0.95);
        border-radius: 12px;
        padding: 40px;
        width: 100%;
        max-width: 400px;
        box-shadow: 0 10px 30px rgba(0,0,0,0.3);
    }
    
    .btn-warning {
        background-color: #ffc107;
        border-color: #ffc107;
        border-radius: 8px;
        color: #212529;
    }
    
    .btn-warning:hover {
        background-color: #e0a800;
        border-color: #d39e00;
    }
    
    .btn-outline-light {
        border-color: #6c757d;
        color: #6c757d;
        border-radius: 8px;
    }
    
    .btn-outline-light:hover {
        background-color: #6c757d;
        border-color: #6c757d;
        color: white;
    }
    
    .text-light {
        color: #495057 !important;
    }
    
    .text-muted {
        color: #6c757d !important;
    }
</style>

@code {
    private string? errorMessage;

    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    public async Task ConfirmLogout()
    {
        try
        {
            // Fazer logout usando a mesma abordagem do admin
            await SignInManager.SignOutAsync();
            
            // Redirecionar usando IdentityRedirectManager
            RedirectManager.RedirectTo("/");
        }
        catch (Exception ex)
        {
            errorMessage = "Erro ao fazer logout. Tente novamente.";
        }
    }

    private sealed class InputModel
    {
        // Classe vazia apenas para manter consistência com outros formulários
    }
}