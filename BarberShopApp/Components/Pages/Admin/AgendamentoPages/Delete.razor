@page "/admin/agendamentos/delete"
@attribute [Authorize(Roles = "Admin,Profissional")]
@using Microsoft.EntityFrameworkCore
@using BarberShopApp.Core.Models
@inject IDbContextFactory<BarberShopApp.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Excluir Agendamento - BarberShop</PageTitle>

<div class="container mt-4">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h1><i class="fas fa-trash me-2"></i>Excluir Agendamento</h1>
                <a href="/admin/agendamentos" class="btn btn-secondary">
                    <i class="fas fa-arrow-left me-2"></i>Voltar
                </a>
            </div>

            @if (agendamento is null)
            {
                <div class="text-center">
                    <div class="spinner-border" role="status">
                        <span class="visually-hidden">Carregando...</span>
                    </div>
                </div>
            }
            else
            {
                <div class="card">
                    <div class="card-header">
                        <h5 class="mb-0"><i class="fas fa-exclamation-triangle me-2"></i>Confirmar Exclusão</h5>
                    </div>
                    <div class="card-body">
                        <div class="alert alert-warning">
                            <i class="fas fa-exclamation-triangle me-2"></i>
                            <strong>Atenção!</strong> Tem certeza que deseja excluir este agendamento? Esta ação não pode ser desfeita.
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label fw-bold">Data e Hora:</label>
                                    <p class="form-control-plaintext">@agendamento.DataHora.ToString("dd/MM/yyyy HH:mm")</p>
                                </div>
                                
                                <div class="mb-3">
                                    <label class="form-label fw-bold">Nome do Cliente:</label>
                                    <p class="form-control-plaintext">@agendamento.NomeDoCliente</p>
                                </div>
                                
                                <div class="mb-3">
                                    <label class="form-label fw-bold">Telefone:</label>
                                    <p class="form-control-plaintext">@agendamento.NumeroDoCliente</p>
                                </div>
                            </div>
                            
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label fw-bold">Serviços:</label>
                                    <div class="form-control-plaintext">
                                        @foreach (var servico in agendamento.Servicos)
                                        {
                                            <span class="badge bg-primary me-1 mb-1">@servico.Nome</span>
                                        }
                                    </div>
                                </div>
                                
                                @if (!string.IsNullOrEmpty(agendamento.Observacoes))
                                {
                                    <div class="mb-3">
                                        <label class="form-label fw-bold">Observações:</label>
                                        <p class="form-control-plaintext">@agendamento.Observacoes</p>
                                    </div>
                                }
                                
                                <div class="mb-3">
                                    <label class="form-label fw-bold">Valor Total:</label>
                                    <p class="form-control-plaintext text-success fw-bold">
                                        R$ @agendamento.Servicos.Sum(s => s.Preco).ToString("F2")
                                    </p>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="card-footer">
                        <div class="d-flex gap-2">
                            <EditForm method="post" Model="agendamento" OnValidSubmit="DeleteAgendamento" FormName="delete" Enhance>
                                <button type="submit" class="btn btn-danger" disabled="@(agendamento is null)">
                                    <i class="fas fa-trash me-2"></i>Confirmar Exclusão
                                </button>
                            </EditForm>
                            <a href="/admin/agendamentos" class="btn btn-secondary">
                                <i class="fas fa-times me-2"></i>Cancelar
                            </a>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@code {
    private Agendamento? agendamento;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        agendamento = await context.Agendamento
            .Include(a => a.Servicos)
            .FirstOrDefaultAsync(m => m.Id == Id);

        if (agendamento is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteAgendamento()
    {
        using var context = DbFactory.CreateDbContext();
        context.Agendamento.Remove(agendamento!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/admin/agendamentos");
    }
}
