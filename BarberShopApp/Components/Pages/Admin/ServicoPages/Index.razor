@page "/admin/servicos"
@attribute [Authorize(Roles = "Admin")]
@using Microsoft.AspNetCore.Components.QuickGrid
@using Microsoft.EntityFrameworkCore
@using BarberShopApp.Core.Models
@using BarberShopApp.Data
@inject IDbContextFactory<BarberShopApp.Data.ApplicationDbContext> DbFactory

@rendermode InteractiveServer
<PageTitle>Servi√ßos - BarberShop</PageTitle>

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2><i class="fas fa-scissors me-2"></i>Gerenciar Servi√ßos</h2>
                <a href="/admin/servicos/create" class="btn btn-primary">
                    <i class="fas fa-plus me-2"></i>Novo Servi√ßo
                </a>
            </div>

            @if (isLoading)
            {
                <div class="text-center">
                    <div class="spinner-border" role="status">
                        <span class="visually-hidden">Carregando...</span>
                    </div>
                </div>
            }
            else
            {
                <!-- Filtros -->
                <div class="row mb-4">
                    <div class="col-12">
                        <div class="card">
                            <div class="card-header">
                                <h6 class="mb-0">üîç Filtros</h6>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-4">
                                        <label class="form-label">Nome:</label>
                                        <input type="text" class="form-control" @bind="FiltroNome" @bind:event="oninput" placeholder="Nome do servi√ßo..." />
                                    </div>
                                    <div class="col-md-4">
                                        <label class="form-label">Pre√ßo M√≠nimo:</label>
                                        <input type="number" step="0.01" class="form-control" @bind="FiltroPrecoMinimo" @bind:event="onchange" placeholder="0,00" />
                                    </div>
                                    <div class="col-md-4">
                                        <label class="form-label">Pre√ßo M√°ximo:</label>
                                        <input type="number" step="0.01" class="form-control" @bind="FiltroPrecoMaximo" @bind:event="onchange" placeholder="999,99" />
                                    </div>
                                </div>
                                <div class="row mt-3">
                                    <div class="col-md-6">
                                        <label class="form-label">Dura√ß√£o M√≠nima (min):</label>
                                        <input type="number" class="form-control" @bind="FiltroDuracaoMinima" @bind:event="onchange" placeholder="0" />
                                    </div>
                                    <div class="col-md-6">
                                        <label class="form-label">Dura√ß√£o M√°xima (min):</label>
                                        <input type="number" class="form-control" @bind="FiltroDuracaoMaxima" @bind:event="onchange" placeholder="999" />
                                    </div>
                                </div>
                                <div class="row mt-2">
                                    <div class="col-12">
                                        <button class="btn btn-outline-secondary btn-sm" @onclick="LimparFiltros">
                                            <i class="fas fa-times"></i> Limpar Filtros
                                        </button>
                                        <button class="btn btn-primary btn-sm ms-2" @onclick="FiltrarServicos">
                                            <i class="fas fa-search"></i> Filtrar
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                @if (ServicosFiltrados != null && ServicosFiltrados.Any())
                {
                    <div class="row">
                        @foreach (var servico in ServicosFiltrados)
                        {
                            <div class="col-md-6 col-lg-4 mb-3">
                                <div class="card h-100">
                                    <div class="card-header">
                                        <h6 class="mb-0">@servico.Nome</h6>
                                    </div>
                                    <div class="card-body">
                                        @if (!string.IsNullOrEmpty(servico.ImgUrl))
                                        {
                                            <img src="@servico.ImgUrl"
                                                 alt="Imagem do servi√ßo"
                                                 class="img-fluid rounded mb-2"
                                                 style="max-height: 200px; object-fit: cover; width: 100%;" />
                                        }
                                        <p class="card-text">@servico.Descricao</p>
                                        <div class="row">
                                            <div class="col-6">
                                                <strong>Dura√ß√£o:</strong><br/>
                                                <span class="badge bg-info">@servico.DuracaoEmMinutos min</span>
                                            </div>
                                            <div class="col-6">
                                                <strong>Pre√ßo:</strong><br/>
                                                <span class="badge bg-success">R$ @servico.Preco.ToString("F2")</span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="card-footer">
                                        <div class="btn-group w-100" role="group">
                                            <a href="@($"admin/servicos/edit?id={servico.Id}")" class="btn btn-sm btn-outline-primary">
                                                <i class="fas fa-edit"></i> Editar
                                            </a>
                                            <a href="@($"admin/servicos/details?id={servico.Id}")" class="btn btn-sm btn-outline-info">
                                                <i class="fas fa-eye"></i> Detalhes
                                            </a>
                                            <a href="@($"admin/servicos/delete?id={servico.Id}")" class="btn btn-sm btn-outline-danger">
                                                <i class="fas fa-trash"></i> Excluir
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <div class="row">
                        <div class="col-12">
                            <div class="alert alert-info text-center">
                                <i class="fas fa-scissors fa-3x mb-3"></i>
                                <h5>Nenhum servi√ßo encontrado</h5>
                                <p>Clique em "Novo Servi√ßo" para criar o primeiro servi√ßo.</p>
                            </div>
                        </div>
                    </div>
                }
            }
        </div>
    </div>
</div>

@code {
    private bool isLoading = true;
    private List<Servico> Servicos { get; set; } = new();
    private List<Servico> ServicosFiltrados { get; set; } = new();
    
    // Filtros
    private string FiltroNome { get; set; } = string.Empty;
    private decimal? FiltroPrecoMinimo { get; set; }
    private decimal? FiltroPrecoMaximo { get; set; }
    private int? FiltroDuracaoMinima { get; set; }
    private int? FiltroDuracaoMaxima { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await CarregarServicos();
        FiltrarServicos();
    }

    private async Task CarregarServicos()
    {
        isLoading = true;
        try
        {
            using var context = DbFactory.CreateDbContext();
            Servicos = await context.Servico
                .OrderBy(s => s.Nome)
                .ToListAsync();
        }
        catch (Exception ex)
        {
            // Log do erro se necess√°rio
        }
        finally
        {
            isLoading = false;
        }
    }
    
    private void FiltrarServicos()
    {
        var query = Servicos.AsQueryable();
        
        if (!string.IsNullOrWhiteSpace(FiltroNome))
        {
            query = query.Where(s => s.Nome.Contains(FiltroNome, StringComparison.OrdinalIgnoreCase) || 
                                   s.Descricao.Contains(FiltroNome, StringComparison.OrdinalIgnoreCase));
        }
        
        if (FiltroPrecoMinimo.HasValue)
        {
            query = query.Where(s => s.Preco >= FiltroPrecoMinimo.Value);
        }
        
        if (FiltroPrecoMaximo.HasValue)
        {
            query = query.Where(s => s.Preco <= FiltroPrecoMaximo.Value);
        }
        
        if (FiltroDuracaoMinima.HasValue)
        {
            query = query.Where(s => s.DuracaoEmMinutos >= FiltroDuracaoMinima.Value);
        }
        
        if (FiltroDuracaoMaxima.HasValue)
        {
            query = query.Where(s => s.DuracaoEmMinutos <= FiltroDuracaoMaxima.Value);
        }
        
        ServicosFiltrados = query.OrderBy(s => s.Nome).ToList();
        StateHasChanged();
    }
    
    private void LimparFiltros()
    {
        FiltroNome = string.Empty;
        FiltroPrecoMinimo = null;
        FiltroPrecoMaximo = null;
        FiltroDuracaoMinima = null;
        FiltroDuracaoMaxima = null;
        FiltrarServicos();
    }
}
