@page "/admin/clientes"
@attribute [Authorize(Roles = "Admin")]
@using Microsoft.EntityFrameworkCore
@using BarberShopApp.Core.Models
@using BarberShopApp.Data
@using Microsoft.AspNetCore.Identity
@inject IDbContextFactory<ApplicationDbContext> DbFactory
@inject UserManager<ApplicationUser> UserManager
@inject NavigationManager Navigation

@rendermode InteractiveServer
<PageTitle>Gerenciar Clientes - Admin</PageTitle>

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h1><i class="fas fa-user-friends me-2"></i>Gerenciar Clientes</h1>
                <button class="btn btn-success" @onclick="NovoCliente">
                    <i class="fas fa-plus me-2"></i>Novo Cliente
                </button>
            </div>

            @if (isLoading)
            {
                <div class="text-center">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Carregando...</span>
                    </div>
                </div>
            }
            else
            {
                <div class="card">
                    <div class="card-header">
                        <div class="row align-items-center">
                            <div class="col-md-6">
                                <h5 class="mb-0">Lista de Clientes</h5>
                            </div>
                            <div class="col-md-6">
                                <div class="input-group">
                                    <span class="input-group-text">
                                        <i class="fas fa-search"></i>
                                    </span>
                                    <input type="text" class="form-control" placeholder="Buscar clientes..." 
                                           @bind="searchTerm" @bind:event="oninput" @onkeyup="FiltrarClientes" />
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        @if (!ClientesFiltrados.Any())
                        {
                            <div class="text-center py-4">
                                <i class="fas fa-user-friends fa-3x text-muted mb-3"></i>
                                <h5 class="text-muted">Nenhum cliente encontrado</h5>
                                <p class="text-muted">Não há clientes cadastrados no sistema.</p>
                            </div>
                        }
                        else
                        {
                            <div class="table-responsive">
                                <table class="table table-hover">
                                    <thead class="table-dark">
                                        <tr>
                                            <th>Nome</th>
                                            <th>Email</th>
                                            <th>Telefone</th>
                                            <th>Data de Nascimento</th>
                                            <th>Data de Cadastro</th>
                                            <th>Ações</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var cliente in ClientesFiltrados)
                                        {
                                            <tr>
                                                <td>
                                                    <div class="d-flex align-items-center">
                                                        <div class="avatar-sm bg-primary text-white rounded-circle d-flex align-items-center justify-content-center me-2">
                                                            <i class="fas fa-user"></i>
                                                        </div>
                                                        <span class="fw-bold">@cliente.ApplicationUser.Nome</span>
                                                    </div>
                                                </td>
                                                <td>@cliente.ApplicationUser.Email</td>
                                                <td>@cliente.Telefone</td>
                                                <td>@cliente.DataNascimento.ToString("dd/MM/yyyy")</td>
                                                <td>@cliente.ApplicationUser.CreatedAt?.ToString("dd/MM/yyyy HH:mm") ?? "N/A"</td>
                                                <td>
                                                    <div class="btn-group" role="group">
                                                        <button class="btn btn-sm btn-outline-primary" @onclick="() => VerDetalhes(cliente.Id)">
                                                            <i class="fas fa-eye"></i>
                                                        </button>
                                                        <button class="btn btn-sm btn-outline-warning" @onclick="() => EditarCliente(cliente.Id)">
                                                            <i class="fas fa-edit"></i>
                                                        </button>
                                                        <button class="btn btn-sm btn-outline-danger" @onclick="() => ExcluirCliente(cliente.Id)">
                                                            <i class="fas fa-trash"></i>
                                                        </button>
                                                    </div>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@code {
    private List<Cliente> Clientes { get; set; } = new();
    private List<Cliente> ClientesFiltrados { get; set; } = new();
    private bool isLoading = true;
    private string searchTerm = "";

    protected override async Task OnInitializedAsync()
    {
        await CarregarClientes();
    }

    private async Task CarregarClientes()
    {
        try
        {
            isLoading = true;
            StateHasChanged();

            using var context = DbFactory.CreateDbContext();
            Clientes = await context.Cliente
                .Include(c => c.ApplicationUser)
                .OrderBy(c => c.ApplicationUser.Nome)
                .ToListAsync();

            ClientesFiltrados = Clientes.ToList();
            isLoading = false;
            StateHasChanged();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Erro ao carregar clientes: {ex.Message}");
            isLoading = false;
            StateHasChanged();
        }
    }

    private void FiltrarClientes()
    {
        if (string.IsNullOrWhiteSpace(searchTerm))
        {
            ClientesFiltrados = Clientes.ToList();
        }
        else
        {
            var term = searchTerm.ToLower();
            ClientesFiltrados = Clientes.Where(c =>
                c.ApplicationUser.Nome.ToLower().Contains(term) ||
                c.ApplicationUser.Email.ToLower().Contains(term) ||
                c.Telefone.Contains(term)
            ).ToList();
        }
        StateHasChanged();
    }

    private void NovoCliente()
    {
        Navigation.NavigateTo("/admin/clientes/create");
    }

    private void VerDetalhes(string clienteId)
    {
        Navigation.NavigateTo($"/admin/clientes/details/{clienteId}");
    }

    private void EditarCliente(string clienteId)
    {
        Navigation.NavigateTo($"/admin/clientes/edit/{clienteId}");
    }

    private async Task ExcluirCliente(string clienteId)
    {
        // Implementar confirmação e exclusão
        // Por enquanto, apenas navegar para a página de exclusão
        Navigation.NavigateTo($"/admin/clientes/delete/{clienteId}");
    }
}
